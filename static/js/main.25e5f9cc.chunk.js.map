{"version":3,"sources":["components/Main.js","img/26383.jpg","img/123.jpg","img/1233.jpg","img/img123.jpeg","img/124.jpg","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","date","temp","mintemp","maxtemp","wind","icon","feelstemp","flag","city","content","className","src","alt","onSubmit","handleFormSubmit","type","value","onChange","inputValue","Header","tablica","img1","img2","img3","img4","img5","randomImg","key","process","App","clouds","handleInputChange","e","setState","target","preventDefault","api","fetch","then","response","ok","Error","json","data","main","speed","weather","temp_min","temp_max","feels_like","name","Date","toLocaleString","Math","floor","random","length","catch","err","console","log","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25e5f9cc.chunk.js","sourcesContent":["import {React} from 'react';\r\n\r\n\r\nconst Main = props => {\r\n    const {date,  temp, mintemp, maxtemp, wind, icon, feelstemp, flag, city} = props.state\r\n    let content = null\r\n    if(flag){\r\n       \r\n         content = (\r\n            <>\r\n            <h2 className=\"h2\">{city} {temp} &#176; C <img src={`http://openweathermap.org/img/wn/${icon}.png`} alt={icon}></img> </h2>\r\n            <p>Data: <strong>{date}</strong></p>\r\n            <p>Feels like: <strong>{feelstemp}&#176; C </strong></p>\r\n            <p>Minimum temp: <strong>{mintemp}&#176; C </strong></p>\r\n            <p>Maximum temp: <strong>{maxtemp}&#176; C </strong></p>\r\n            <p>Wind speed: <strong>{wind} km/h </strong></p>\r\n            \r\n           \r\n            </>\r\n        )\r\n    }\r\n    else if(!flag && !city) content = <h1>Wyszukaj miasto!</h1>\r\n    else if(!flag && city) content = <h1>W naszej bazie nie ma takiego miasta</h1>\r\n    return ( \r\n        <>\r\n        <main>\r\n            \r\n            \r\n           \r\n            \r\n        </main>\r\n        <div className=\"diw\">\r\n        <form onSubmit={props.handleFormSubmit}>\r\n                <input type=\"text\" \r\n                value={props.value}\r\n                 onChange={props.inputValue}\r\n                 >\r\n                     </input> <button>Wyszukaj</button>\r\n            </form>\r\n            \r\n            {content}\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Main;","export default __webpack_public_path__ + \"static/media/26383.1ce9d26f.jpg\";","export default __webpack_public_path__ + \"static/media/123.b7b214fc.jpg\";","export default __webpack_public_path__ + \"static/media/1233.a03ea056.jpg\";","export default __webpack_public_path__ + \"static/media/img123.b4cbcc1a.jpeg\";","export default __webpack_public_path__ + \"static/media/124.fab28aa5.jpg\";","import {React} from 'react';\r\nimport img1 from '../img/26383.jpg';\r\nimport img2 from '../img/123.jpg';\r\nimport img3 from '../img/1233.jpg';\r\nimport img4 from '../img/img123.jpeg';\r\nimport img5 from '../img/124.jpg'\r\nconst Header = (props) => {\r\n    const tablica = [img1,img2,img3,img4,img5]\r\n    \r\n    return ( \r\n        <header ><img className=\"topimg\" src={tablica[props.randomImg]} alt={tablica[props.randomImg]}></img></header>\r\n        \r\n     );\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\n\nimport Header from './Header';\n\n\nconst key = process.env.REACT_APP_API_KEY;\nconst tablica = [0,1,2,3,4];\nclass App extends Component {\n  state = { \n    value: '',\n    temp: '',\n    wind: '',\n    clouds: '',\n    icon: '',\n    flag: false,\n    mintemp: '',\n    maxtemp: '',\n    feelstemp: '',\n    city: '',\n    date: '',\n    randomImg: 0,\n\n   }\n   handleInputChange = (e) => {\n     this.setState({\n       value: e.target.value,\n     })\n   }\n   handleFormSubmit = (e) => {\n     e.preventDefault()\n     \n     const api = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${key}&units=metric` \n     fetch(api)\n     .then(response =>{\n       if(response.ok){\n         \n         this.setState({flag: true})\n         return response\n       }\n      else{  \n        this.setState({flag: false})\n        throw Error(\"W naszej bazie nie znalezlismy takiego miasta!\")\n      }\n     })\n     .then(response => response.json())\n     .then(data => this.setState({\n       temp: data.main.temp,\n       wind: data.wind.speed,\n       icon: data.weather[0].icon,\n       mintemp: data.main.temp_min,\n       maxtemp: data.main.temp_max,\n       feelstemp: data.main.feels_like,\n       city: data.name,\n       date: new Date().toLocaleString(),\n       randomImg: Math.floor(Math.random()*tablica.length),\n       \n     }))\n     .catch(err => console.log(err))\n     \n     \n   }\n  render() { \n    return (\n      <>\n      <Header randomImg={this.state.randomImg}/>\n      <Main inputValue={this.handleInputChange} value={this.state.value} state={this.state} handleFormSubmit={this.handleFormSubmit}/>\n      \n      </>\n      );\n  }\n}\n \nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}