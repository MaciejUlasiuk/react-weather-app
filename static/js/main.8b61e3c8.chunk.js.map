{"version":3,"sources":["components/Main.jsx","components/Header.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Main","data","handleFormSubmit","inputValue","value","className","onSubmit","type","onChange","name","Section","main","temp","src","weather","icon","alt","Date","toLocaleString","feels_like","temp_min","temp_max","wind","speed","humidity","Header","App","useState","setData","setValue","api","process","fetchAPI","a","fetch","fetchit","json","response","console","log","useEffect","e","target","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAuBeA,EArBF,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,iBAAkBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAClD,OACE,mCACE,0BAASC,UAAU,UAAnB,UACE,uBAAMC,SAAUJ,EAAhB,UACE,uBAAOK,KAAK,OAAOH,MAAOA,EAAOI,SAAUL,IAAqB,IAChE,iDAEDF,EAAKQ,KACJ,cAAC,EAAD,CACER,KAAMA,EACNC,iBAAkBA,EAClBC,WAAYA,EACZC,MAAOA,IAEP,WAQNM,EAAU,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACjB,OACE,qCACE,qBAAII,UAAU,KAAd,UACGJ,EAAKQ,KADR,IACeR,EAAKU,KAAKC,KADzB,UACwC,IACtC,qBACEC,IAAG,2CAAsCZ,EAAKa,QAAQ,GAAGC,KAAtD,QACHC,IAAKf,EAAKa,QAAQ,GAAGC,OACf,OAEV,uCACQ,kCAAS,IAAIE,MAAOC,sBAE5B,6CACc,mCAASjB,EAAKU,KAAKQ,WAAnB,gBAEd,+CACgB,mCAASlB,EAAKU,KAAKS,SAAnB,gBAEhB,+CACgB,mCAASnB,EAAKU,KAAKU,SAAnB,gBAEhB,6CACc,mCAASpB,EAAKqB,KAAKC,MAAnB,eAEd,2CACY,iCAAStB,EAAKU,KAAKa,kBC7CtBC,EAJA,WACb,OAAO,4BC8CMC,EAzCH,WACV,MAAwBC,mBAAS,IAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAA0BD,mBAAS,UAAnC,mBAAOvB,EAAP,KAAcyB,EAAd,KAIMC,EAAG,4DAAwD1B,EAAxD,kBARC2B,mCAQD,iBAEHC,EAAQ,uCAAG,8BAAAC,EAAA,sEACOC,MAAMJ,GADb,cACTK,EADS,gBAEQA,EAAQC,OAFhB,OAETC,EAFS,OAIfT,EAAQS,GACRC,QAAQC,IAAIF,GACZC,QAAQC,IAAItC,EAAKQ,MANF,2CAAH,qDAQd+B,qBACE,WACER,MAEF,GACA,CAAC5B,IAOH,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEH,KAAMA,EACNE,WA9BoB,SAACsC,GACzBZ,EAASY,EAAEC,OAAOtC,QA8BdA,MAAOA,EACPF,iBAZmB,SAACuC,GACxBA,EAAEE,iBACFX,WCrBWY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b61e3c8.chunk.js","sourcesContent":["import { React } from \"react\";\r\n\r\nconst Main = ({ data, handleFormSubmit, inputValue, value }) => {\r\n  return (\r\n    <>\r\n      <section className=\"wrapper\">\r\n        <form onSubmit={handleFormSubmit}>\r\n          <input type=\"text\" value={value} onChange={inputValue}></input>{\" \"}\r\n          <button>Wyszukaj</button>\r\n        </form>\r\n        {data.name ? (\r\n          <Section\r\n            data={data}\r\n            handleFormSubmit={handleFormSubmit}\r\n            inputValue={inputValue}\r\n            value={value}\r\n          />\r\n        ) : null}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst Section = ({ data }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"h2\">\r\n        {data.name} {data.main.temp} &#176; C{\" \"}\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}\r\n          alt={data.weather[0].icon}\r\n        ></img>{\" \"}\r\n      </h2>\r\n      <p>\r\n        Data: <strong>{new Date().toLocaleString()}</strong>\r\n      </p>\r\n      <p>\r\n        Feels like: <strong>{data.main.feels_like}&#176; C </strong>\r\n      </p>\r\n      <p>\r\n        Minimum temp: <strong>{data.main.temp_min}&#176; C </strong>\r\n      </p>\r\n      <p>\r\n        Maximum temp: <strong>{data.main.temp_max}&#176; C </strong>\r\n      </p>\r\n      <p>\r\n        Wind speed: <strong>{data.wind.speed} km/h </strong>\r\n      </p>\r\n      <p>\r\n        Humidity: <strong>{data.main.humidity}</strong>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import { React } from \"react\";\r\n\r\nconst Header = () => {\r\n  return <header></header>;\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./Main\";\n\nimport Header from \"./Header\";\n\nconst key = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [value, setValue] = useState(\"Warsaw\");\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n  const api = `https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${key}&units=metric`;\n\n  const fetchAPI = async () => {\n    const fetchit = await fetch(api);\n    const response = await fetchit.json();\n\n    setData(response);\n    console.log(response);\n    console.log(data.name);\n  };\n  useEffect(\n    () => {\n      fetchAPI();\n    },\n    [],\n    [value]\n  );\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    fetchAPI();\n  };\n\n  return (\n    <>\n      <Header />\n      <Main\n        data={data}\n        inputValue={handleInputChange}\n        value={value}\n        handleFormSubmit={handleFormSubmit}\n      />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}